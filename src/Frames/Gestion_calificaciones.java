/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frames;

import Clases.Conectar;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Color;
import java.awt.Font;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.*;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author Reyser
 */

public class Gestion_calificaciones extends javax.swing.JFrame {
    Conectar con = new Conectar();
    Connection cn = con.conexion();
    
    public TableCellRenderer centerAlight = new CentrarTablas();
    
    int xMouse, yMouse;
    
    public Gestion_calificaciones() {
        initComponents();
        
        this.setLocationRelativeTo(null);
        mostrarTabla("");
    }
    
    void mostrarTabla(String valor){
        DefaultTableModel modelo = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int filas, int columnas) {
                if (columnas == 6)
                    return true;
                else
                    return false;
            }
        }; 
        
        tablaGestionCalificaciones.getTableHeader().setFont(new Font("Roboto", Font.BOLD, 12));
        tablaGestionCalificaciones.getTableHeader().setOpaque(false);
        tablaGestionCalificaciones.getTableHeader().setBackground(Color.WHITE);
        tablaGestionCalificaciones.getTableHeader().setForeground(Color.BLACK);
        tablaGestionCalificaciones.setRowHeight(25);
        
        modelo.addColumn("Nombre");
        modelo.addColumn("Apellidos");
        modelo.addColumn("Grado");
        modelo.addColumn("Materia");
        modelo.addColumn("Promedio");
        
        tablaGestionCalificaciones.setModel(modelo);
        
        String sql = "SELECT alumnos.nombre As nombre, "
                + "alumnos.apellido AS apellido, "
                + "alumnos.grado AS grado, "
                + "alumnos.id_curso_asignado AS curso,  "
                + "AVG(calificacion) AS promedio "
                + "FROM alumnos "
                + "INNER JOIN notas "
                + "ON alumnos.id_alumno=notas.id_alumno_nota "
                + "GROUP BY alumnos.id_alumno";
        
        String datos[] = new String[5];
        Statement st;
        
        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            
            while (rs.next()){
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(3);
                datos[3] = rs.getString(4);
                datos[4] = "" + (int) Math.round(Double.parseDouble(rs.getString(5)));
                
                modelo.addRow(datos);
            }
            
            tablaGestionCalificaciones.getColumnModel().getColumn(2).setCellRenderer(centerAlight);
            tablaGestionCalificaciones.getColumnModel().getColumn(4).setCellRenderer(centerAlight);


        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error en el Inner Join... Contacte al administrador");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        volverBtn = new javax.swing.JPanel();
        volverBtnTxt = new javax.swing.JLabel();
        title = new javax.swing.JLabel();
        header = new javax.swing.JPanel();
        exitBtn = new javax.swing.JPanel();
        exitLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaGestionCalificaciones = new javax.swing.JTable();
        imprimirBtn = new javax.swing.JPanel();
        imprimirBtnTxt = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        volverBtn.setBackground(new java.awt.Color(121, 70, 140));

        volverBtnTxt.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        volverBtnTxt.setForeground(new java.awt.Color(255, 255, 255));
        volverBtnTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        volverBtnTxt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/volverIcon.png"))); // NOI18N
        volverBtnTxt.setText("Volver");
        volverBtnTxt.setToolTipText("");
        volverBtnTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        volverBtnTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                volverBtnTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                volverBtnTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                volverBtnTxtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout volverBtnLayout = new javax.swing.GroupLayout(volverBtn);
        volverBtn.setLayout(volverBtnLayout);
        volverBtnLayout.setHorizontalGroup(
            volverBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, volverBtnLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(volverBtnTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        volverBtnLayout.setVerticalGroup(
            volverBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(volverBtnTxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        bg.add(volverBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 430, -1, 40));

        title.setFont(new java.awt.Font("Roboto Black", 1, 24)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("GESTIÃ“N DE CALIFICACIONES");
        bg.add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 800, -1));

        header.setBackground(new java.awt.Color(255, 255, 255));
        header.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                headerMouseDragged(evt);
            }
        });
        header.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                headerMousePressed(evt);
            }
        });

        exitBtn.setBackground(new java.awt.Color(255, 255, 255));

        exitLabel.setBackground(new java.awt.Color(255, 255, 255));
        exitLabel.setFont(new java.awt.Font("Roboto Light", 0, 24)); // NOI18N
        exitLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exitLabel.setText("X");
        exitLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitLabel.setPreferredSize(new java.awt.Dimension(40, 40));
        exitLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exitLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exitLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout exitBtnLayout = new javax.swing.GroupLayout(exitBtn);
        exitBtn.setLayout(exitBtnLayout);
        exitBtnLayout.setHorizontalGroup(
            exitBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, exitBtnLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(exitLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        exitBtnLayout.setVerticalGroup(
            exitBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(exitLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addGap(0, 758, Short.MAX_VALUE)
                .addComponent(exitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(exitBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        bg.add(header, new org.netbeans.lib.awtextra.AbsoluteConstraints(1, 1, 798, 40));

        tablaGestionCalificaciones.setFont(new java.awt.Font("Roboto", 0, 12)); // NOI18N
        tablaGestionCalificaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablaGestionCalificaciones.setGridColor(new java.awt.Color(204, 204, 204));
        tablaGestionCalificaciones.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tablaGestionCalificaciones);

        bg.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, 650, 330));

        imprimirBtn.setBackground(new java.awt.Color(121, 70, 140));

        imprimirBtnTxt.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        imprimirBtnTxt.setForeground(new java.awt.Color(255, 255, 255));
        imprimirBtnTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imprimirBtnTxt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/imprimirIcon.png"))); // NOI18N
        imprimirBtnTxt.setText(" IMPRIMIR");
        imprimirBtnTxt.setToolTipText("");
        imprimirBtnTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        imprimirBtnTxt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                imprimirBtnTxtMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                imprimirBtnTxtMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                imprimirBtnTxtMouseExited(evt);
            }
        });

        javax.swing.GroupLayout imprimirBtnLayout = new javax.swing.GroupLayout(imprimirBtn);
        imprimirBtn.setLayout(imprimirBtnLayout);
        imprimirBtnLayout.setHorizontalGroup(
            imprimirBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(imprimirBtnTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
        );
        imprimirBtnLayout.setVerticalGroup(
            imprimirBtnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(imprimirBtnTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        bg.add(imprimirBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 430, 120, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void volverBtnTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_volverBtnTxtMouseClicked
        Principal principal = new Principal();

        principal.setVisible(true);
        dispose();
    }//GEN-LAST:event_volverBtnTxtMouseClicked

    private void exitLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitLabelMouseClicked
        int valor = JOptionPane.showConfirmDialog(null, "Â¿Desea cerrar la aplicaciÃ³n?",
            "ADVERTENCIA", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

        if (valor == JOptionPane.YES_OPTION)
        System.exit(0);
    }//GEN-LAST:event_exitLabelMouseClicked

    private void exitLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitLabelMouseEntered
        exitBtn.setBackground(Color.red);
        exitLabel.setForeground(Color.white);
    }//GEN-LAST:event_exitLabelMouseEntered

    private void exitLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitLabelMouseExited
        exitBtn.setBackground(Color.white);
        exitLabel.setForeground(Color.black);
    }//GEN-LAST:event_exitLabelMouseExited

    private void headerMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();

        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_headerMouseDragged

    private void headerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_headerMousePressed

    private void imprimirBtnTxtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imprimirBtnTxtMouseClicked
        Document documento = new Document();
        Calendar calendario = Calendar.getInstance();
        Date fecha = new Date(calendario.getTimeInMillis());
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/YYYY");
        
        String verFecha = formato.format(fecha);
        
        try {
            String ruta = System.getProperty("user.home");
            PdfWriter.getInstance(documento, new FileOutputStream(ruta + "/desktop/" + "CALIFICACIONES" + ".pdf"));
            
            Paragraph parrafo = new Paragraph();
            parrafo.setAlignment(Paragraph.ALIGN_CENTER);
            parrafo.setFont(FontFactory.getFont("Arial", 20, Font.BOLD, BaseColor.BLACK));
            parrafo.add("\nCALIFICACIONES\n\n");
            
            Paragraph ponerFecha = new Paragraph();
            ponerFecha.setAlignment(Paragraph.ALIGN_RIGHT);
            ponerFecha.setFont(FontFactory.getFont("Arial", 12, BaseColor.BLACK));
            ponerFecha.add("Fecha:  " + verFecha + "\n\n\n");
            
            documento.open();
            documento.add(parrafo);
            documento.add(ponerFecha);
            
            PdfPTable tablaAlumno = new PdfPTable(5);
            
            tablaAlumno.addCell("Nombre");
            tablaAlumno.addCell("Apellidos");
            tablaAlumno.addCell("Grado");
            tablaAlumno.addCell("Materia");
            tablaAlumno.addCell("Promedio");
            
            try {
                PreparedStatement ps = cn.prepareStatement("SELECT alumnos.nombre, "
                        + "alumnos.apellido, "
                        + "alumnos.grado, "
                        + "alumnos.id_curso_asignado, "
                        + "AVG(calificacion) AS promedio "
                        + "FROM alumnos "
                        + "INNER JOIN notas "
                        + "ON alumnos.id_alumno = notas.id_alumno_nota "
                        + "GROUP BY alumnos.id_alumno");
                
                ResultSet rs = ps.executeQuery();
                
                if (rs.next()) {
                    do {
                        tablaAlumno.addCell(rs.getString("alumnos.nombre"));
                        tablaAlumno.addCell(rs.getString("alumnos.apellido"));
                        tablaAlumno.addCell(rs.getString("alumnos.grado"));
                        tablaAlumno.addCell(rs.getString("alumnos.id_curso_asignado"));
                        int prom = (int) Math.round(Double.parseDouble(rs.getString("promedio")));
                        tablaAlumno.addCell("" + prom);
                    } while (rs.next()); {
                        documento.add(tablaAlumno);
                    }
                }
            } catch (SQLException e) {
                System.err.println("Error al obtener datos del alumno " + e);
            }
            
            documento.close();
            JOptionPane.showMessageDialog(null, "Documento creado con Ã©xito");

        } catch (DocumentException | IOException e) {
            System.err.println("Error en el pdf o ruta " + e);
            JOptionPane.showMessageDialog(null, "Error al generar el PDF");
        }
    }//GEN-LAST:event_imprimirBtnTxtMouseClicked

    private void imprimirBtnTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imprimirBtnTxtMouseEntered
        imprimirBtn.setBackground(new Color (141, 79, 164));
    }//GEN-LAST:event_imprimirBtnTxtMouseEntered

    private void imprimirBtnTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imprimirBtnTxtMouseExited
        imprimirBtn.setBackground(new Color (121,70,140));
    }//GEN-LAST:event_imprimirBtnTxtMouseExited

    private void volverBtnTxtMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_volverBtnTxtMouseEntered
        volverBtn.setBackground(new Color (141, 79, 164));
    }//GEN-LAST:event_volverBtnTxtMouseEntered

    private void volverBtnTxtMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_volverBtnTxtMouseExited
        volverBtn.setBackground(new Color (121,70,140));
    }//GEN-LAST:event_volverBtnTxtMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gestion_calificaciones().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bg;
    private javax.swing.JPanel exitBtn;
    private javax.swing.JLabel exitLabel;
    private javax.swing.JPanel header;
    private javax.swing.JPanel imprimirBtn;
    private javax.swing.JLabel imprimirBtnTxt;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaGestionCalificaciones;
    private javax.swing.JLabel title;
    private javax.swing.JPanel volverBtn;
    private javax.swing.JLabel volverBtnTxt;
    // End of variables declaration//GEN-END:variables
}
